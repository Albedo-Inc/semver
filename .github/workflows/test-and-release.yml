name: '@jscutlery/semver CI'

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12, 14, 16]

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn nx affected:lint --base=origin/main
      - run: yarn nx affected:build --base=origin/main
      # @NOTICE find a way to use affected:test with --code-coverage flag (if that possible??)
      - run: yarn nx test semver --code-coverage
      - run: yarn nx affected:e2e --headless --base=origin/main
      - name: Codecov upload
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    needs: [test]

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup
      - name: Setup git user to "ðŸ¤– JSCutlery Bot"
        run: git config user.email "-" && git config user.name "ðŸ¤– JSCutlery Bot"
      - name: Version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        # Use npx instead of yarn because yarn automagically sets NPM_* environment variables
        # like NPM_CONFIG_REGISTRY so npm publish ends up ignoring the .npmrc file
        # which is set up by `setup-node` action.
        run: npx nx affected --base=origin/main --target=version
      - name: Tag last-release
        run: git tag -f last-release
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          force: true
          tags: true
